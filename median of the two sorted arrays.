class Solution {
public:
    double findMedianSortedArrays(vector<int>& num1, vector<int>& num2) {
        int count=0;
        int i=0,j=0,a=0,b=0;
        int n=num1.size(),m=num2.size();
        if((n+m+1)%2==0)
        {
            count=(n+m+1)/2;
            while(count>0)
            {
                if(i==n)
                {
                    while(count>0)
                    {
                        j++;
                        count--;
                        a=num2[j-1];
                    }
                }
                else if(j==m)
                {
                    while(count>0)
                    {
                        i++;
                        count--;
                        a=num1[i-1];
                    }
                }
                else if(num1[i]>=num2[j])
                {
                    j++;
                    count--;
                    a=num2[j-1];
                }
                else if(num2[j]>num1[i])
                {
                    i++;
                    count--;
                    a=num1[i-1];
                
                

                }
            }
            return a;
        }
        else
        {
            count=(n+m)/2;
            while(count>=0)
            {
                if(i==n)
                {
                    while(count>=0)
                    {
                        j++;
                        count--;
                        b=a;
                        a=num2[j-1];
                    }
                }
                else if(j==m)
                {
                    while(count>=0)
                    {
                        i++;
                        count--;
                        b=a;
                        a=num1[i-1];
                    }
                }
                else if(num1[i]>=num2[j])
                {
                    j++;
                    count--;
                    b=a;
                    a=num2[j-1];
                }
                else if(num2[j]>num1[i])
                {
                    i++;
                    count--;
                    b=a;
                    a=num1[i-1];
                }
            }
            return (a+b)/2.0;
        }
        
    }
};
