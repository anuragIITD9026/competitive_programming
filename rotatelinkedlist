/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int n) {
         ListNode *prev=head,*current=head;
        int i=1;
        if(head==NULL)
        {
            return head;
        }

        while(current->next)
        {
            current=current->next;
            i++;
        }
        if(n%i==0||i==1)
        {
            return head;
        }
        current->next=head;
        int j=i;
        i=1;
        while(i<j-(n%j))
        {
            prev=prev->next;
            i++;
        }
        
        current=prev->next;
        prev->next=NULL;
        head=current;
        return head;
    }
};
